{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["import { Controller } from 'stimulus'\r\n\r\nexport default class extends Controller {\r\n  static values = {\r\n    padding: Number,\r\n    targetHeight: Number,\r\n    display: String\r\n  }\r\n\r\n  initialize () {\r\n    this.element['imageGrid'] = this\r\n    Array.prototype.filter\r\n      .call(\r\n        this.element.childNodes,\r\n        node => node.nodeType == 3 && !/\\S/.test(node.nodeValue)\r\n      )\r\n      .forEach(node => node.remove())\r\n    if (!this.hasPaddingValue) this.paddingValue = 10\r\n    if (!this.hasTargetHeightValue) this.targetHeightValue = 150\r\n    if (!this.hasDisplayValue) this.displayValue = 'inline-block'\r\n    this.resizeObserver = new ResizeObserver(this.observed.bind(this))\r\n  }\r\n\r\n  observed (elements) {\r\n    this.albumWidth = elements[0].contentRect.width\r\n    this.processImages()\r\n  }\r\n\r\n  connect () {\r\n    this.resizeObserver.observe(this.element)\r\n  }\r\n\r\n  disconnect () {\r\n    this.resizeObserver.unobserve(this.element)\r\n  }\r\n\r\n  processImages () {\r\n    let row = 0\r\n    this.elements = []\r\n    this.images = Array.from(this.element.children)\r\n    this.images.forEach((ele, index) => {\r\n      const image = ele.nodeName === 'IMG' ? ele : ele.querySelector('img')\r\n      let width, height\r\n      if ('width' in image.dataset && 'height' in image.dataset) {\r\n        width = image.dataset.width\r\n        height = image.dataset.height\r\n      } else {\r\n        const comp = window.getComputedStyle(image)\r\n        width = parseFloat(comp.getPropertyValue('width').slice(0, -2))\r\n        height = parseFloat(comp.getPropertyValue('height').slice(0, -2))\r\n        image.dataset.width = width\r\n        image.dataset.height = height\r\n      }\r\n      const idealW = Math.ceil((width / height) * this.targetHeightValue)\r\n      const idealH = Math.ceil(this.targetHeightValue)\r\n      this.elements.push([ele, idealW, idealH])\r\n      row += idealW + this.paddingValue\r\n      if (row > this.albumWidth && this.elements.length) {\r\n        this.resizeRow(row - this.paddingValue)\r\n        row = 0\r\n        this.elements = []\r\n      }\r\n      if (this.images.length - 1 == index && this.elements.length) {\r\n        this.resizeRow(row)\r\n        row = 0\r\n        this.elements = []\r\n      }\r\n    }, this)\r\n  }\r\n\r\n  resizeRow (row) {\r\n    const imageExtras = this.paddingValue * (this.elements.length - 1)\r\n    const albumWidthAdjusted = this.albumWidth - imageExtras\r\n    const overPercent = albumWidthAdjusted / (row - imageExtras)\r\n    let trackWidth = imageExtras\r\n    this.elements.forEach((element, index) => {\r\n      const [ele, idealW, idealH] = element\r\n      let fw = Math.floor(idealW * overPercent)\r\n      let fh = Math.floor(idealH * overPercent)\r\n      const isNotLast = index < this.elements.length - 1\r\n      trackWidth += fw\r\n      if (!isNotLast && trackWidth < this.albumWidth)\r\n        fw += this.albumWidth - trackWidth\r\n      fw--\r\n      const image = ele.nodeName === 'IMG' ? ele : ele.querySelector('img')\r\n      image.style.width = fw + 'px'\r\n      image.style.height = fh + 'px'\r\n      ele.style.marginBottom = this.paddingValue + 'px'\r\n      ele.style.marginRight = isNotLast ? this.paddingValue + 'px' : 0\r\n      ele.style.display = this.displayValue\r\n      ele.style.verticalAlign = 'bottom'\r\n    }, this)\r\n  }\r\n}\r\n"],"names":["element","Array","prototype","filter","call","childNodes","node","nodeType","test","nodeValue","forEach","remove","hasPaddingValue","paddingValue","hasTargetHeightValue","targetHeightValue","hasDisplayValue","displayValue","resizeObserver","ResizeObserver","observed","bind","elements","albumWidth","contentRect","width","processImages","observe","unobserve","row","images","from","children","ele","index","image","nodeName","querySelector","height","dataset","comp","window","getComputedStyle","parseFloat","getPropertyValue","slice","idealW","Math","ceil","idealH","push","length","resizeRow","imageExtras","albumWidthAdjusted","overPercent","trackWidth","fw","floor","fh","isNotLast","style","marginBottom","marginRight","display","verticalAlign","Controller","padding","Number","targetHeight","String"],"mappings":"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"}